const refs = {
  startBtn: document.querySelector("button[data-action-start]"),
  stopBtn: document.querySelector("button[data-action-stop]"),
  clockFace: document.querySelector(".js-clockface"),
};

class Timer {
  constructor({ onTick }) {
    this.intervalId = null;
    this.isActive = false;
    this.onTick = onTick;
  }

  start() {
    if (this.isActive) {
      return;
    }
    const startTime = Date.now();
    this.isActive = true;
    this.intervalId = setInterval(() => {
      const currentTime = Date.now();
      const deltaTime = currentTime - startTime;
      const time = getTimeComponents(deltaTime);

      this.onTick(time);
    }, 1000);
  }

  stop() {
    clearInterval(this.intervalId);
    this.isActive = false;
  }
}

const timer = new Timer({
  onTick: updateClockface,
});

// const timer = {
//   intervalId: null,
//   isActive: false,
//   //–Ω–∞—à–µ–º—É —Ç–∞–π–º–µ—Ä—É –Ω—É–∂–Ω–∞ —Ç–æ—á–∫–∞ –æ—Ç—Å—á–µ—Ç–∞
//   start() {
//     if (this.isActive) {
//       return;
//     }
//     const startTime = Date.now(); //–∫–æ–≥–¥–∞ –≤—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ start –º—ã —Ö–æ—Ç–∏–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ –≤—Ä–µ–º—è
//     this.isActive = true;
//     this.intervalId = setInterval(() => {
//       const currentTime = Date.now(); //—Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
//       const deltaTime = currentTime - startTime;
//       //const { hours, mins, secs } = getTimeComponents(deltaTime); // –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∏—Ä—É–µ–º —Ñ-—é getTimeComponents
//       const time = getTimeComponents(deltaTime);

//       updateClockface(time);
//       //console.log("start -> currentTime", currentTime);
//       //   console.log("start -> startTime", startTime); //startTime –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º
//       //   console.log("qweqweqwqeqe");

//       //console.log(timeComponents); //—Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É —Ç–µ–∫—É—â–∏–º —Å —Å—Ç–∞—Ä—Ç–æ–≤—ã–º –≤—Ä–µ–º–µ–Ω–µ–º
//       //console.log(`${hours}::${mins}::${secs}`);
//     }, 1000);
//   },
//   //–Ω—É–∂–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª
//   stop() {
//     clearInterval(this.intervalId);
//     this.isActive = false;
//   },
// };

//–≤–æ –≤—Ä–µ–º—è –≤—ã–∑–æ–≤–∞ —ç—Ç–æ–≥–æ –º–µ—Ç–æ–¥–∞ —Å–æ–∑–¥–∞–µ—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è startTime, –∫–æ—Ç–æ—Ä–∞—è —Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ –≤—Ä–µ–º—è
//timer.start(); //–Ω–∞—á–∏–Ω–∞–µ—Ç —Å—á–∏—Ç–∞—Ç—å.

refs.startBtn.addEventListener("click", () => {
  // –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å—Ç–∞—Ä—Ç –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è —Ç–∞–π–º–µ—Ä
  timer.start();
});

refs.stopBtn.addEventListener("click", () => {
  timer.stop();
});

/*
 * - –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –≤—Ä–µ–º—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
 * - –í—ã—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ –≤ –Ω–∏—Ö –≤–º–µ—â–∞–µ—Ç—Å—è —á–∞—Å–æ–≤/–º–∏–Ω—É—Ç/—Å–µ–∫—É–Ω–¥
 * - –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—å–µ–∫—Ç —Å–æ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ hours, mins, secs
 * - –ê–¥—Å–∫–∞—è –∫–æ–ø–∏–ø–∞—Å—Ç–∞ —Å–æ —Å—Ç–µ–∫–∞ üí©
 */

function getTimeComponents(time) {
  const hours = pad(
    Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))
  );
  const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));
  const secs = pad(Math.floor((time % (1000 * 60)) / 1000));

  return { hours, mins, secs };
}

/*
 * - –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –≤—Ä–µ–º—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
 * - –í—ã—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ –≤ –Ω–∏—Ö –≤–º–µ—â–∞–µ—Ç—Å—è —á–∞—Å–æ–≤/–º–∏–Ω—É—Ç/—Å–µ–∫—É–Ω–¥
 * - –†–∏—Å—É–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
 */
function updateClockface({ hours, mins, secs }) {
  refs.clockFace.textContent = `${hours}:${mins}:${secs}`;
}

/*
 * –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —á–∏—Å–ª–æ, –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ —Å—Ç—Ä–æ–∫–µ –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –Ω–∞—á–∞–ª–æ 0 –µ—Å–ª–∏ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ 2-—Ö –∑–Ω–∞–∫–æ–≤
 */
function pad(value) {
  return String(value).padStart(2, "0"); //padStart - –º–µ—Ç–æ–¥ —Å—Ç—Ä–æ–∫–∏
}
